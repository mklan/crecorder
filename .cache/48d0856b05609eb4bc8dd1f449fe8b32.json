{"id":"../../node_modules/webm-writer/BlobBuffer.js","dependencies":[{"name":"/home/matthias/projects/tmp/capture/node_modules/webm-writer/package.json","includedInParent":true,"mtime":1533889833420},{"name":"/home/matthias/projects/tmp/capture/package.json","includedInParent":true,"mtime":1533898107085},{"name":"/home/matthias/projects/tmp/capture/.babelrc","includedInParent":true,"mtime":1533895030021},{"name":"fs","loc":{"line":223,"column":38},"parent":"/home/matthias/projects/tmp/capture/node_modules/webm-writer/BlobBuffer.js","resolved":"/home/matthias/projects/tmp/capture/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"buffer","parent":"/home/matthias/projects/tmp/capture/node_modules/webm-writer/BlobBuffer.js","resolved":"/home/matthias/projects/tmp/capture/node_modules/node-libs-browser/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\"use strict\";\n\n/**\n * Allows a series of Blob-convertible objects (ArrayBuffer, Blob, String, etc) to be added to a buffer. Seeking and\n * overwriting of blobs is allowed.\n * \n * You can supply a FileWriter, in which case the BlobBuffer is just used as temporary storage before it writes it \n * through to the disk.\n * \n * By Nicholas Sherlock\n * \n * Released under the WTFPLv2 https://en.wikipedia.org/wiki/WTFPL\n */\n(function() {\n\tvar BlobBuffer = function(fs) {\n\t\treturn function(destination) {\n\t\t\tvar\n\t\t\t\tbuffer = [],\n\t\t\t\twritePromise = Promise.resolve(),\n\t\t\t\tfileWriter = null,\n\t\t\t\tfd = null;\n\t\t\t\n\t\t\tif (typeof FileWriter !== \"undefined\" && destination instanceof FileWriter) {\n\t\t\t\tfileWriter = destination;\n\t\t\t} else if (fs && destination) {\n\t\t\t\tfd = destination;\n\t\t\t}\n\t\t\t\n\t\t\t// Current seek offset\n\t\t\tthis.pos = 0;\n\t\t\t\n\t\t\t// One more than the index of the highest byte ever written\n\t\t\tthis.length = 0;\n\t\t\t\n\t\t\t// Returns a promise that converts the blob to an ArrayBuffer\n\t\t\tfunction readBlobAsBuffer(blob) {\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\tvar\n\t\t\t\t\t\treader = new FileReader();\n\t\t\t\t\t\n\t\t\t\t\treader.addEventListener(\"loadend\", function () {\n\t\t\t\t\t\tresolve(reader.result);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treader.readAsArrayBuffer(blob);\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tfunction convertToUint8Array(thing) {\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\tif (thing instanceof Uint8Array) {\n\t\t\t\t\t\tresolve(thing);\n\t\t\t\t\t} else if (thing instanceof ArrayBuffer || ArrayBuffer.isView(thing)) {\n\t\t\t\t\t\tresolve(new Uint8Array(thing));\n\t\t\t\t\t} else if (thing instanceof Blob) {\n\t\t\t\t\t\tresolve(readBlobAsBuffer(thing).then(function (buffer) {\n\t\t\t\t\t\t\treturn new Uint8Array(buffer);\n\t\t\t\t\t\t}));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//Assume that Blob will know how to read this thing\n\t\t\t\t\t\tresolve(readBlobAsBuffer(new Blob([thing])).then(function (buffer) {\n\t\t\t\t\t\t\treturn new Uint8Array(buffer);\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tfunction measureData(data) {\n\t\t\t\tvar\n\t\t\t\t\tresult = data.byteLength || data.length || data.size;\n\t\t\t\t\n\t\t\t\tif (!Number.isInteger(result)) {\n\t\t\t\t\tthrow \"Failed to determine size of element\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Seek to the given absolute offset.\n\t\t\t *\n\t\t\t * You may not seek beyond the end of the file (this would create a hole and/or allow blocks to be written in non-\n\t\t\t * sequential order, which isn't currently supported by the memory buffer backend).\n\t\t\t */\n\t\t\tthis.seek = function (offset) {\n\t\t\t\tif (offset < 0) {\n\t\t\t\t\tthrow \"Offset may not be negative\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (isNaN(offset)) {\n\t\t\t\t\tthrow \"Offset may not be NaN\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (offset > this.length) {\n\t\t\t\t\tthrow \"Seeking beyond the end of file is not allowed\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.pos = offset;\n\t\t\t};\n\t\t\t\n\t\t\t/**\n\t\t\t * Write the Blob-convertible data to the buffer at the current seek position.\n\t\t\t *\n\t\t\t * Note: If overwriting existing data, the write must not cross preexisting block boundaries (written data must\n\t\t\t * be fully contained by the extent of a previous write).\n\t\t\t */\n\t\t\tthis.write = function (data) {\n\t\t\t\tvar\n\t\t\t\t\tnewEntry = {\n\t\t\t\t\t\toffset: this.pos,\n\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\tlength: measureData(data)\n\t\t\t\t\t},\n\t\t\t\t\tisAppend = newEntry.offset >= this.length;\n\t\t\t\t\n\t\t\t\tthis.pos += newEntry.length;\n\t\t\t\tthis.length = Math.max(this.length, this.pos);\n\t\t\t\t\n\t\t\t\t// After previous writes complete, perform our write\n\t\t\t\twritePromise = writePromise.then(function () {\n\t\t\t\t\tif (fd) {\n\t\t\t\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\t\t\t\tconvertToUint8Array(newEntry.data).then(function(dataArray) {\n\t\t\t\t\t\t\t\tvar\n\t\t\t\t\t\t\t\t\ttotalWritten = 0,\n\t\t\t\t\t\t\t\t\tbuffer = Buffer.from(dataArray.buffer),\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\thandleWriteComplete = function(err, written, buffer) {\n\t\t\t\t\t\t\t\t\t\ttotalWritten += written;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (totalWritten >= buffer.length) {\n\t\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t// We still have more to write...\n\t\t\t\t\t\t\t\t\t\t\tfs.write(fd, buffer, totalWritten, buffer.length - totalWritten, newEntry.offset + totalWritten, handleWriteComplete);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfs.write(fd, buffer, 0, buffer.length, newEntry.offset, handleWriteComplete);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (fileWriter) {\n\t\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\t\tfileWriter.onwriteend = resolve;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfileWriter.seek(newEntry.offset);\n\t\t\t\t\t\t\tfileWriter.write(new Blob([newEntry.data]));\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (!isAppend) {\n\t\t\t\t\t\t// We might be modifying a write that was already buffered in memory.\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Slow linear search to find a block we might be overwriting\n\t\t\t\t\t\tfor (var i = 0; i < buffer.length; i++) {\n\t\t\t\t\t\t\tvar\n\t\t\t\t\t\t\t\tentry = buffer[i];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// If our new entry overlaps the old one in any way...\n\t\t\t\t\t\t\tif (!(newEntry.offset + newEntry.length <= entry.offset || newEntry.offset >= entry.offset + entry.length)) {\n\t\t\t\t\t\t\t\tif (newEntry.offset < entry.offset || newEntry.offset + newEntry.length > entry.offset + entry.length) {\n\t\t\t\t\t\t\t\t\tthrow new Error(\"Overwrite crosses blob boundaries\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (newEntry.offset == entry.offset && newEntry.length == entry.length) {\n\t\t\t\t\t\t\t\t\t// We overwrote the entire block\n\t\t\t\t\t\t\t\t\tentry.data = newEntry.data;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// We're done\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn convertToUint8Array(entry.data)\n\t\t\t\t\t\t\t\t\t\t.then(function (entryArray) {\n\t\t\t\t\t\t\t\t\t\t\tentry.data = entryArray;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\treturn convertToUint8Array(newEntry.data);\n\t\t\t\t\t\t\t\t\t\t}).then(function (newEntryArray) {\n\t\t\t\t\t\t\t\t\t\t\tnewEntry.data = newEntryArray;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tentry.data.set(newEntry.data, newEntry.offset - entry.offset);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Else fall through to do a simple append, as we didn't overwrite any pre-existing blocks\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbuffer.push(newEntry);\n\t\t\t\t});\n\t\t\t};\n\t\t\t\n\t\t\t/**\n\t\t\t * Finish all writes to the buffer, returning a promise that signals when that is complete.\n\t\t\t *\n\t\t\t * If a FileWriter was not provided, the promise is resolved with a Blob that represents the completed BlobBuffer\n\t\t\t * contents. You can optionally pass in a mimeType to be used for this blob.\n\t\t\t *\n\t\t\t * If a FileWriter was provided, the promise is resolved with null as the first argument.\n\t\t\t */\n\t\t\tthis.complete = function (mimeType) {\n\t\t\t\tif (fd || fileWriter) {\n\t\t\t\t\twritePromise = writePromise.then(function () {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// After writes complete we need to merge the buffer to give to the caller\n\t\t\t\t\twritePromise = writePromise.then(function () {\n\t\t\t\t\t\tvar\n\t\t\t\t\t\t\tresult = [];\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (var i = 0; i < buffer.length; i++) {\n\t\t\t\t\t\t\tresult.push(buffer[i].data);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn new Blob(result, {mimeType: mimeType});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn writePromise;\n\t\t\t};\n\t\t};\n\t};\n\t\n\tif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n\t\tmodule.exports = BlobBuffer(require('fs'));\n\t} else {\n\t\twindow.BlobBuffer = BlobBuffer(null);\n\t}\n})();","map":{"mappings":[{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../../node_modules/webm-writer/BlobBuffer.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}}],"sources":{"../../node_modules/webm-writer/BlobBuffer.js":"\"use strict\";\n\n/**\n * Allows a series of Blob-convertible objects (ArrayBuffer, Blob, String, etc) to be added to a buffer. Seeking and\n * overwriting of blobs is allowed.\n * \n * You can supply a FileWriter, in which case the BlobBuffer is just used as temporary storage before it writes it \n * through to the disk.\n * \n * By Nicholas Sherlock\n * \n * Released under the WTFPLv2 https://en.wikipedia.org/wiki/WTFPL\n */\n(function() {\n\tvar BlobBuffer = function(fs) {\n\t\treturn function(destination) {\n\t\t\tvar\n\t\t\t\tbuffer = [],\n\t\t\t\twritePromise = Promise.resolve(),\n\t\t\t\tfileWriter = null,\n\t\t\t\tfd = null;\n\t\t\t\n\t\t\tif (typeof FileWriter !== \"undefined\" && destination instanceof FileWriter) {\n\t\t\t\tfileWriter = destination;\n\t\t\t} else if (fs && destination) {\n\t\t\t\tfd = destination;\n\t\t\t}\n\t\t\t\n\t\t\t// Current seek offset\n\t\t\tthis.pos = 0;\n\t\t\t\n\t\t\t// One more than the index of the highest byte ever written\n\t\t\tthis.length = 0;\n\t\t\t\n\t\t\t// Returns a promise that converts the blob to an ArrayBuffer\n\t\t\tfunction readBlobAsBuffer(blob) {\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\tvar\n\t\t\t\t\t\treader = new FileReader();\n\t\t\t\t\t\n\t\t\t\t\treader.addEventListener(\"loadend\", function () {\n\t\t\t\t\t\tresolve(reader.result);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treader.readAsArrayBuffer(blob);\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tfunction convertToUint8Array(thing) {\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\tif (thing instanceof Uint8Array) {\n\t\t\t\t\t\tresolve(thing);\n\t\t\t\t\t} else if (thing instanceof ArrayBuffer || ArrayBuffer.isView(thing)) {\n\t\t\t\t\t\tresolve(new Uint8Array(thing));\n\t\t\t\t\t} else if (thing instanceof Blob) {\n\t\t\t\t\t\tresolve(readBlobAsBuffer(thing).then(function (buffer) {\n\t\t\t\t\t\t\treturn new Uint8Array(buffer);\n\t\t\t\t\t\t}));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//Assume that Blob will know how to read this thing\n\t\t\t\t\t\tresolve(readBlobAsBuffer(new Blob([thing])).then(function (buffer) {\n\t\t\t\t\t\t\treturn new Uint8Array(buffer);\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tfunction measureData(data) {\n\t\t\t\tvar\n\t\t\t\t\tresult = data.byteLength || data.length || data.size;\n\t\t\t\t\n\t\t\t\tif (!Number.isInteger(result)) {\n\t\t\t\t\tthrow \"Failed to determine size of element\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Seek to the given absolute offset.\n\t\t\t *\n\t\t\t * You may not seek beyond the end of the file (this would create a hole and/or allow blocks to be written in non-\n\t\t\t * sequential order, which isn't currently supported by the memory buffer backend).\n\t\t\t */\n\t\t\tthis.seek = function (offset) {\n\t\t\t\tif (offset < 0) {\n\t\t\t\t\tthrow \"Offset may not be negative\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (isNaN(offset)) {\n\t\t\t\t\tthrow \"Offset may not be NaN\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (offset > this.length) {\n\t\t\t\t\tthrow \"Seeking beyond the end of file is not allowed\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.pos = offset;\n\t\t\t};\n\t\t\t\n\t\t\t/**\n\t\t\t * Write the Blob-convertible data to the buffer at the current seek position.\n\t\t\t *\n\t\t\t * Note: If overwriting existing data, the write must not cross preexisting block boundaries (written data must\n\t\t\t * be fully contained by the extent of a previous write).\n\t\t\t */\n\t\t\tthis.write = function (data) {\n\t\t\t\tvar\n\t\t\t\t\tnewEntry = {\n\t\t\t\t\t\toffset: this.pos,\n\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\tlength: measureData(data)\n\t\t\t\t\t},\n\t\t\t\t\tisAppend = newEntry.offset >= this.length;\n\t\t\t\t\n\t\t\t\tthis.pos += newEntry.length;\n\t\t\t\tthis.length = Math.max(this.length, this.pos);\n\t\t\t\t\n\t\t\t\t// After previous writes complete, perform our write\n\t\t\t\twritePromise = writePromise.then(function () {\n\t\t\t\t\tif (fd) {\n\t\t\t\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\t\t\t\tconvertToUint8Array(newEntry.data).then(function(dataArray) {\n\t\t\t\t\t\t\t\tvar\n\t\t\t\t\t\t\t\t\ttotalWritten = 0,\n\t\t\t\t\t\t\t\t\tbuffer = Buffer.from(dataArray.buffer),\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\thandleWriteComplete = function(err, written, buffer) {\n\t\t\t\t\t\t\t\t\t\ttotalWritten += written;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (totalWritten >= buffer.length) {\n\t\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t// We still have more to write...\n\t\t\t\t\t\t\t\t\t\t\tfs.write(fd, buffer, totalWritten, buffer.length - totalWritten, newEntry.offset + totalWritten, handleWriteComplete);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfs.write(fd, buffer, 0, buffer.length, newEntry.offset, handleWriteComplete);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (fileWriter) {\n\t\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\t\tfileWriter.onwriteend = resolve;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfileWriter.seek(newEntry.offset);\n\t\t\t\t\t\t\tfileWriter.write(new Blob([newEntry.data]));\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (!isAppend) {\n\t\t\t\t\t\t// We might be modifying a write that was already buffered in memory.\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Slow linear search to find a block we might be overwriting\n\t\t\t\t\t\tfor (var i = 0; i < buffer.length; i++) {\n\t\t\t\t\t\t\tvar\n\t\t\t\t\t\t\t\tentry = buffer[i];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// If our new entry overlaps the old one in any way...\n\t\t\t\t\t\t\tif (!(newEntry.offset + newEntry.length <= entry.offset || newEntry.offset >= entry.offset + entry.length)) {\n\t\t\t\t\t\t\t\tif (newEntry.offset < entry.offset || newEntry.offset + newEntry.length > entry.offset + entry.length) {\n\t\t\t\t\t\t\t\t\tthrow new Error(\"Overwrite crosses blob boundaries\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (newEntry.offset == entry.offset && newEntry.length == entry.length) {\n\t\t\t\t\t\t\t\t\t// We overwrote the entire block\n\t\t\t\t\t\t\t\t\tentry.data = newEntry.data;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// We're done\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn convertToUint8Array(entry.data)\n\t\t\t\t\t\t\t\t\t\t.then(function (entryArray) {\n\t\t\t\t\t\t\t\t\t\t\tentry.data = entryArray;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\treturn convertToUint8Array(newEntry.data);\n\t\t\t\t\t\t\t\t\t\t}).then(function (newEntryArray) {\n\t\t\t\t\t\t\t\t\t\t\tnewEntry.data = newEntryArray;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tentry.data.set(newEntry.data, newEntry.offset - entry.offset);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Else fall through to do a simple append, as we didn't overwrite any pre-existing blocks\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbuffer.push(newEntry);\n\t\t\t\t});\n\t\t\t};\n\t\t\t\n\t\t\t/**\n\t\t\t * Finish all writes to the buffer, returning a promise that signals when that is complete.\n\t\t\t *\n\t\t\t * If a FileWriter was not provided, the promise is resolved with a Blob that represents the completed BlobBuffer\n\t\t\t * contents. You can optionally pass in a mimeType to be used for this blob.\n\t\t\t *\n\t\t\t * If a FileWriter was provided, the promise is resolved with null as the first argument.\n\t\t\t */\n\t\t\tthis.complete = function (mimeType) {\n\t\t\t\tif (fd || fileWriter) {\n\t\t\t\t\twritePromise = writePromise.then(function () {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// After writes complete we need to merge the buffer to give to the caller\n\t\t\t\t\twritePromise = writePromise.then(function () {\n\t\t\t\t\t\tvar\n\t\t\t\t\t\t\tresult = [];\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (var i = 0; i < buffer.length; i++) {\n\t\t\t\t\t\t\tresult.push(buffer[i].data);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn new Blob(result, {mimeType: mimeType});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn writePromise;\n\t\t\t};\n\t\t};\n\t};\n\t\n\tif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n\t\tmodule.exports = BlobBuffer(require('fs'));\n\t} else {\n\t\twindow.BlobBuffer = BlobBuffer(null);\n\t}\n})();"},"lineCount":228}},"hash":"3b8c452331747867023eba63fe9991c7","cacheData":{"env":{}}}