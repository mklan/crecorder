{"id":"../../node_modules/webm-writer/WebMWriter.js","dependencies":[{"name":"/home/matthias/projects/tmp/capture/node_modules/webm-writer/package.json","includedInParent":true,"mtime":1533889833420},{"name":"/home/matthias/projects/tmp/capture/package.json","includedInParent":true,"mtime":1533898107085},{"name":"/home/matthias/projects/tmp/capture/.babelrc","includedInParent":true,"mtime":1533895030021},{"name":"./ArrayBufferDataStream","loc":{"line":659,"column":41},"parent":"/home/matthias/projects/tmp/capture/node_modules/webm-writer/WebMWriter.js","resolved":"/home/matthias/projects/tmp/capture/node_modules/webm-writer/ArrayBufferDataStream.js"},{"name":"./BlobBuffer","loc":{"line":659,"column":77},"parent":"/home/matthias/projects/tmp/capture/node_modules/webm-writer/WebMWriter.js","resolved":"/home/matthias/projects/tmp/capture/node_modules/webm-writer/BlobBuffer.js"}],"generated":{"js":"/**\n * WebM video encoder for Google Chrome. This implementation is suitable for creating very large video files, because\n * it can stream Blobs directly to a FileWriter without buffering the entire video in memory.\n * \n * When FileWriter is not available or not desired, it can buffer the video in memory as a series of Blobs which are \n * eventually returned as one composite Blob.\n * \n * By Nicholas Sherlock.\n * \n * Based on the ideas from Whammy: https://github.com/antimatter15/whammy\n * \n * Released under the WTFPLv2 https://en.wikipedia.org/wiki/WTFPL\n */\n\n\"use strict\";\n\n(function() {\n    var WebMWriter = function(ArrayBufferDataStream, BlobBuffer) {\n        function extend(base, top) {\n            var\n                target = {};\n            \n            [base, top].forEach(function(obj) {\n                for (var prop in obj) {\n                    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n                        target[prop] = obj[prop];\n                    }\n                }\n            });\n            \n            return target;\n        }\n        \n        /**\n         * Decode a Base64 data URL into a binary string.\n         *\n         * Returns the binary string, or false if the URL could not be decoded.\n         */\n        function decodeBase64WebPDataURL(url) {\n            if (typeof url !== \"string\" || !url.match(/^data:image\\/webp;base64,/i)) {\n                return false;\n            }\n            \n            return window.atob(url.substring(\"data:image\\/webp;base64,\".length));\n        }\n        \n        /**\n         * Convert a raw binary string (one character = one output byte) to an ArrayBuffer\n         */\n        function stringToArrayBuffer(string) {\n            var\n                buffer = new ArrayBuffer(string.length),\n                int8Array = new Uint8Array(buffer);\n            \n            for (var i = 0; i < string.length; i++) {\n                int8Array[i] = string.charCodeAt(i);\n            }\n            \n            return buffer;\n        }\n        \n        /**\n         * Convert the given canvas to a WebP encoded image and return the image data as a string.\n         */\n        function renderAsWebP(canvas, quality) {\n            var\n                frame = canvas.toDataURL('image/webp', {quality: quality});\n            \n            return decodeBase64WebPDataURL(frame);\n        }\n        \n        function extractKeyframeFromWebP(webP) {\n            // Assume that Chrome will generate a Simple Lossy WebP which has this header:\n            var\n                keyframeStartIndex = webP.indexOf('VP8 ');\n            \n            if (keyframeStartIndex == -1) {\n                throw \"Failed to identify beginning of keyframe in WebP image\";\n            }\n            \n            // Skip the header and the 4 bytes that encode the length of the VP8 chunk\n            keyframeStartIndex += 'VP8 '.length + 4;\n            \n            return webP.substring(keyframeStartIndex);\n        }\n        \n        // Just a little utility so we can tag values as floats for the EBML encoder's benefit\n        function EBMLFloat32(value) {\n            this.value = value;\n        }\n        \n        function EBMLFloat64(value) {\n            this.value = value;\n        }\n        \n        /**\n         * Write the given EBML object to the provided ArrayBufferStream.\n         *\n         * The buffer's first byte is at bufferFileOffset inside the video file. This is used to complete offset and\n         * dataOffset fields in each EBML structure, indicating the file offset of the first byte of the EBML element and\n         * its data payload.\n         */\n        function writeEBML(buffer, bufferFileOffset, ebml) {\n            // Is the ebml an array of sibling elements?\n            if (Array.isArray(ebml)) {\n                for (var i = 0; i < ebml.length; i++) {\n                    writeEBML(buffer, bufferFileOffset, ebml[i]);\n                }\n            // Is this some sort of raw data that we want to write directly?\n            } else if (typeof ebml === \"string\") {\n                buffer.writeString(ebml);\n            } else if (ebml instanceof Uint8Array) {\n                buffer.writeBytes(ebml);\n            } else if (ebml.id){\n                // We're writing an EBML element\n                ebml.offset = buffer.pos + bufferFileOffset;\n                \n                buffer.writeUnsignedIntBE(ebml.id); // ID field\n                \n                // Now we need to write the size field, so we must know the payload size:\n                \n                if (Array.isArray(ebml.data)) {\n                    // Writing an array of child elements. We won't try to measure the size of the children up-front\n                    \n                    var\n                        sizePos, dataBegin, dataEnd;\n                    \n                    if (ebml.size === -1) {\n                        // Write the reserved all-one-bits marker to note that the size of this element is unknown/unbounded\n                        buffer.writeByte(0xFF);\n                    } else {\n                        sizePos = buffer.pos;\n                        \n                        /* Write a dummy size field to overwrite later. 4 bytes allows an element maximum size of 256MB,\n                         * which should be plenty (we don't want to have to buffer that much data in memory at one time\n                         * anyway!)\n                         */\n                        buffer.writeBytes([0, 0, 0, 0]);\n                    }\n                    \n                    dataBegin = buffer.pos;\n                    \n                    ebml.dataOffset = dataBegin + bufferFileOffset;\n                    writeEBML(buffer, bufferFileOffset, ebml.data);\n                    \n                    if (ebml.size !== -1) {\n                        dataEnd = buffer.pos;\n                        \n                        ebml.size = dataEnd - dataBegin;\n                        \n                        buffer.seek(sizePos);\n                        buffer.writeEBMLVarIntWidth(ebml.size, 4); // Size field\n                        \n                        buffer.seek(dataEnd);\n                    }\n                } else if (typeof ebml.data === \"string\") {\n                    buffer.writeEBMLVarInt(ebml.data.length); // Size field\n                    ebml.dataOffset = buffer.pos + bufferFileOffset;\n                    buffer.writeString(ebml.data);\n                } else if (typeof ebml.data === \"number\") {\n                    // Allow the caller to explicitly choose the size if they wish by supplying a size field\n                    if (!ebml.size) {\n                        ebml.size = buffer.measureUnsignedInt(ebml.data);\n                    }\n                    \n                    buffer.writeEBMLVarInt(ebml.size); // Size field\n                    ebml.dataOffset = buffer.pos + bufferFileOffset;\n                    buffer.writeUnsignedIntBE(ebml.data, ebml.size);\n                } else if (ebml.data instanceof EBMLFloat64) {\n                    buffer.writeEBMLVarInt(8); // Size field\n                    ebml.dataOffset = buffer.pos + bufferFileOffset;\n                    buffer.writeDoubleBE(ebml.data.value);\n                } else if (ebml.data instanceof EBMLFloat32) {\n                    buffer.writeEBMLVarInt(4); // Size field\n                    ebml.dataOffset = buffer.pos + bufferFileOffset;\n                    buffer.writeFloatBE(ebml.data.value);\n                } else if (ebml.data instanceof Uint8Array) {\n                    buffer.writeEBMLVarInt(ebml.data.byteLength); // Size field\n                    ebml.dataOffset = buffer.pos + bufferFileOffset;\n                    buffer.writeBytes(ebml.data);\n                } else {\n                    throw \"Bad EBML datatype \" + typeof ebml.data;\n                }\n            } else {\n                throw \"Bad EBML datatype \" + typeof ebml.data;\n            }\n        }\n        \n        return function(options) {\n            var\n                MAX_CLUSTER_DURATION_MSEC = 5000,\n                DEFAULT_TRACK_NUMBER = 1,\n            \n                writtenHeader = false,\n                videoWidth, videoHeight,\n                \n                clusterFrameBuffer = [],\n                clusterStartTime = 0,\n                clusterDuration = 0,\n                \n                optionDefaults = {\n                    quality: 0.95,       // WebM image quality from 0.0 (worst) to 1.0 (best)\n                    fileWriter: null,    // Chrome FileWriter in order to stream to a file instead of buffering to memory (optional)\n                    fd: null,            // Node.JS file descriptor to write to instead of buffering (optional)\n                    \n                    // You must supply one of:\n                    frameDuration: null, // Duration of frames in milliseconds\n                    frameRate: null,     // Number of frames per second\n                },\n                \n                seekPoints = {\n                    Cues: {id: new Uint8Array([0x1C, 0x53, 0xBB, 0x6B]), positionEBML: null},\n                    SegmentInfo: {id: new Uint8Array([0x15, 0x49, 0xA9, 0x66]), positionEBML: null},\n                    Tracks: {id: new Uint8Array([0x16, 0x54, 0xAE, 0x6B]), positionEBML: null},\n                },\n                \n                ebmlSegment,\n                segmentDuration = {\n                    \"id\": 0x4489, // Duration\n                    \"data\": new EBMLFloat64(0)\n                },\n                \n                seekHead,\n                \n                cues = [],\n                \n                blobBuffer = new BlobBuffer(options.fileWriter || options.fd);\n    \n            function fileOffsetToSegmentRelative(fileOffset) {\n                return fileOffset - ebmlSegment.dataOffset;\n            }\n            \n            /**\n             * Create a SeekHead element with descriptors for the points in the global seekPoints array.\n             *\n             * 5 bytes of position values are reserved for each node, which lie at the offset point.positionEBML.dataOffset,\n             * to be overwritten later.\n             */\n            function createSeekHead() {\n                var\n                    seekPositionEBMLTemplate = {\n                        \"id\": 0x53AC, // SeekPosition\n                        \"size\": 5, // Allows for 32GB video files\n                        \"data\": 0 // We'll overwrite this when the file is complete\n                    },\n                    \n                    result = {\n                        \"id\": 0x114D9B74, // SeekHead\n                        \"data\": []\n                    };\n                \n                for (var name in seekPoints) {\n                    var\n                        seekPoint = seekPoints[name];\n                \n                    seekPoint.positionEBML = Object.create(seekPositionEBMLTemplate);\n                    \n                    result.data.push({\n                         \"id\": 0x4DBB, // Seek\n                         \"data\": [\n                              {\n                                  \"id\": 0x53AB, // SeekID\n                                  \"data\": seekPoint.id\n                              },\n                              seekPoint.positionEBML\n                         ]\n                    });\n                }\n                \n                return result;\n            }\n            \n            /**\n             * Write the WebM file header to the stream.\n             */\n            function writeHeader() {\n                seekHead = createSeekHead();\n                \n                var\n                    ebmlHeader = {\n                        \"id\": 0x1a45dfa3, // EBML\n                        \"data\": [\n                            {\n                                \"id\": 0x4286, // EBMLVersion\n                                \"data\": 1\n                            },\n                            {\n                                \"id\": 0x42f7, // EBMLReadVersion\n                                \"data\": 1\n                            },\n                            {\n                                \"id\": 0x42f2, // EBMLMaxIDLength\n                                \"data\": 4\n                            },\n                            {\n                                \"id\": 0x42f3, // EBMLMaxSizeLength\n                                \"data\": 8\n                            },\n                            {\n                                \"id\": 0x4282, // DocType\n                                \"data\": \"webm\"\n                            },\n                            {\n                                \"id\": 0x4287, // DocTypeVersion\n                                \"data\": 2\n                            },\n                            {\n                                \"id\": 0x4285, // DocTypeReadVersion\n                                \"data\": 2\n                            }\n                        ]\n                    },\n                    \n                    segmentInfo = {\n                        \"id\": 0x1549a966, // Info\n                        \"data\": [\n                            {\n                                \"id\": 0x2ad7b1, // TimecodeScale\n                                \"data\": 1e6 // Times will be in miliseconds (1e6 nanoseconds per step = 1ms)\n                            },\n                            {\n                                \"id\": 0x4d80, // MuxingApp\n                                \"data\": \"webm-writer-js\",\n                            },\n                            {\n                                \"id\": 0x5741, // WritingApp\n                                \"data\": \"webm-writer-js\"\n                            },\n                            segmentDuration // To be filled in later\n                        ]\n                    },\n                    \n                    tracks = {\n                        \"id\": 0x1654ae6b, // Tracks\n                        \"data\": [\n                            {\n                                \"id\": 0xae, // TrackEntry\n                                \"data\": [\n                                    {\n                                        \"id\": 0xd7, // TrackNumber\n                                        \"data\": DEFAULT_TRACK_NUMBER\n                                    },\n                                    {\n                                        \"id\": 0x73c5, // TrackUID\n                                        \"data\": DEFAULT_TRACK_NUMBER\n                                    },\n                                    {\n                                        \"id\": 0x9c, // FlagLacing\n                                        \"data\": 0\n                                    },\n                                    {\n                                        \"id\": 0x22b59c, // Language\n                                        \"data\": \"und\"\n                                    },\n                                    {\n                                        \"id\": 0x86, // CodecID\n                                        \"data\": \"V_VP8\"\n                                    },\n                                    {\n                                        \"id\": 0x258688, // CodecName\n                                        \"data\": \"VP8\"\n                                    },\n                                    {\n                                        \"id\": 0x83, // TrackType\n                                        \"data\": 1\n                                    },\n                                    {\n                                        \"id\": 0xe0,  // Video\n                                        \"data\": [\n                                            {\n                                                \"id\": 0xb0, // PixelWidth\n                                                \"data\": videoWidth\n                                            },\n                                            {\n                                                \"id\": 0xba, // PixelHeight\n                                                \"data\": videoHeight\n                                            }\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    };\n                \n                ebmlSegment = {\n                    \"id\": 0x18538067, // Segment\n                    \"size\": -1, // Unbounded size\n                    \"data\": [\n                        seekHead,\n                        segmentInfo,\n                        tracks,\n                    ]\n                };\n                \n                var\n                    bufferStream = new ArrayBufferDataStream(256);\n                    \n                writeEBML(bufferStream, blobBuffer.pos, [ebmlHeader, ebmlSegment]);\n                blobBuffer.write(bufferStream.getAsDataArray());\n                \n                // Now we know where these top-level elements lie in the file:\n                seekPoints.SegmentInfo.positionEBML.data = fileOffsetToSegmentRelative(segmentInfo.offset);\n                seekPoints.Tracks.positionEBML.data = fileOffsetToSegmentRelative(tracks.offset);\n            };\n            \n            /**\n             * Create a SimpleBlock keyframe header using these fields:\n             *     timecode    - Time of this keyframe\n             *     trackNumber - Track number from 1 to 126 (inclusive)\n             *     frame       - Raw frame data payload string\n             *\n             * Returns an EBML element.\n             */\n            function createKeyframeBlock(keyframe) {\n                var\n                    bufferStream = new ArrayBufferDataStream(1 + 2 + 1);\n                \n                if (!(keyframe.trackNumber > 0 && keyframe.trackNumber < 127)) {\n                    throw \"TrackNumber must be > 0 and < 127\";\n                }\n    \n                bufferStream.writeEBMLVarInt(keyframe.trackNumber); // Always 1 byte since we limit the range of trackNumber\n                bufferStream.writeU16BE(keyframe.timecode);\n                \n                // Flags byte\n                bufferStream.writeByte(\n                    1 << 7 // Keyframe\n                );\n                \n                return {\n                    \"id\": 0xA3, // SimpleBlock\n                    \"data\": [\n                         bufferStream.getAsDataArray(),\n                         keyframe.frame\n                    ]\n                };\n            }\n            \n            /**\n             * Create a Cluster node using these fields:\n             *\n             *    timecode    - Start time for the cluster\n             *\n             * Returns an EBML element.\n             */\n            function createCluster(cluster) {\n                return {\n                    \"id\": 0x1f43b675,\n                    \"data\": [\n                         {\n                            \"id\": 0xe7, // Timecode\n                            \"data\": Math.round(cluster.timecode)\n                         }\n                    ]\n                };\n            }\n            \n            function addCuePoint(trackIndex, clusterTime, clusterFileOffset) {\n                cues.push({\n                    \"id\": 0xBB, // Cue\n                    \"data\": [\n                         {\n                             \"id\": 0xB3, // CueTime\n                             \"data\": clusterTime\n                         },\n                         {\n                             \"id\": 0xB7, // CueTrackPositions\n                             \"data\": [\n                                  {\n                                      \"id\": 0xF7, // CueTrack\n                                      \"data\": trackIndex\n                                  },\n                                  {\n                                      \"id\": 0xF1, // CueClusterPosition\n                                      \"data\": fileOffsetToSegmentRelative(clusterFileOffset)\n                                  }\n                             ]\n                         }\n                    ]\n                });\n            }\n            \n            /**\n             * Write a Cues element to the blobStream using the global `cues` array of CuePoints (use addCuePoint()).\n             * The seek entry for the Cues in the SeekHead is updated.\n             */\n            function writeCues() {\n                var\n                    ebml = {\n                        \"id\": 0x1C53BB6B,\n                        \"data\": cues\n                    },\n                    \n                    cuesBuffer = new ArrayBufferDataStream(16 + cues.length * 32); // Pretty crude estimate of the buffer size we'll need\n                \n                writeEBML(cuesBuffer, blobBuffer.pos, ebml);\n                blobBuffer.write(cuesBuffer.getAsDataArray());\n                \n                // Now we know where the Cues element has ended up, we can update the SeekHead\n                seekPoints.Cues.positionEBML.data = fileOffsetToSegmentRelative(ebml.offset);\n            }\n            \n            /**\n             * Flush the frames in the current clusterFrameBuffer out to the stream as a Cluster.\n             */\n            function flushClusterFrameBuffer() {\n                if (clusterFrameBuffer.length == 0) {\n                    return;\n                }\n    \n                // First work out how large of a buffer we need to hold the cluster data\n                var\n                    rawImageSize = 0;\n                \n                for (var i = 0; i < clusterFrameBuffer.length; i++) {\n                    rawImageSize += clusterFrameBuffer[i].frame.length;\n                }\n                \n                var\n                    buffer = new ArrayBufferDataStream(rawImageSize + clusterFrameBuffer.length * 32), // Estimate 32 bytes per SimpleBlock header\n    \n                    cluster = createCluster({\n                        timecode: Math.round(clusterStartTime),\n                    });\n                    \n                for (var i = 0; i < clusterFrameBuffer.length; i++) {\n                    cluster.data.push(createKeyframeBlock(clusterFrameBuffer[i]));\n                }\n                \n                writeEBML(buffer, blobBuffer.pos, cluster);\n                blobBuffer.write(buffer.getAsDataArray());\n                \n                addCuePoint(DEFAULT_TRACK_NUMBER, Math.round(clusterStartTime), cluster.offset);\n                \n                clusterFrameBuffer = [];\n                clusterStartTime += clusterDuration;\n                clusterDuration = 0;\n            }\n            \n            function validateOptions() {\n                // Derive frameDuration setting if not already supplied\n                if (!options.frameDuration) {\n                    if (options.frameRate) {\n                        options.frameDuration = 1000 / options.frameRate;\n                    } else {\n                        throw \"Missing required frameDuration or frameRate setting\";\n                    }\n                }\n            }\n            \n            function addFrameToCluster(frame) {\n                frame.trackNumber = DEFAULT_TRACK_NUMBER;\n                \n                // Frame timecodes are relative to the start of their cluster:\n                frame.timecode = Math.round(clusterDuration);\n    \n                clusterFrameBuffer.push(frame);\n                \n                clusterDuration += frame.duration;\n                \n                if (clusterDuration >= MAX_CLUSTER_DURATION_MSEC) {\n                    flushClusterFrameBuffer();\n                }\n            }\n            \n            /**\n             * Rewrites the SeekHead element that was initially written to the stream with the offsets of top level elements.\n             *\n             * Call once writing is complete (so the offset of all top level elements is known).\n             */\n            function rewriteSeekHead() {\n                var\n                    seekHeadBuffer = new ArrayBufferDataStream(seekHead.size),\n                    oldPos = blobBuffer.pos;\n                \n                // Write the rewritten SeekHead element's data payload to the stream (don't need to update the id or size)\n                writeEBML(seekHeadBuffer, seekHead.dataOffset, seekHead.data);\n                \n                // And write that through to the file\n                blobBuffer.seek(seekHead.dataOffset);\n                blobBuffer.write(seekHeadBuffer.getAsDataArray());\n    \n                blobBuffer.seek(oldPos);\n            }\n            \n            /**\n             * Rewrite the Duration field of the Segment with the newly-discovered video duration.\n             */\n            function rewriteDuration() {\n                var\n                    buffer = new ArrayBufferDataStream(8),\n                    oldPos = blobBuffer.pos;\n                \n                // Rewrite the data payload (don't need to update the id or size)\n                buffer.writeDoubleBE(clusterStartTime);\n                \n                // And write that through to the file\n                blobBuffer.seek(segmentDuration.dataOffset);\n                blobBuffer.write(buffer.getAsDataArray());\n        \n                blobBuffer.seek(oldPos);\n            }\n            \n            /**\n             * Add a frame to the video. Currently the frame must be a Canvas element.\n             */\n            this.addFrame = function(canvas) {\n                if (writtenHeader) {\n                    if (canvas.width != videoWidth || canvas.height != videoHeight) {\n                        throw \"Frame size differs from previous frames\";\n                    }\n                } else {\n                    videoWidth = canvas.width;\n                    videoHeight = canvas.height;\n    \n                    writeHeader();\n                    writtenHeader = true;\n                }\n    \n                var\n                    webP = renderAsWebP(canvas, {quality: options.quality});\n                \n                if (!webP) {\n                    throw \"Couldn't decode WebP frame, does the browser support WebP?\";\n                }\n                \n                addFrameToCluster({\n                    frame: extractKeyframeFromWebP(webP),\n                    duration: options.frameDuration\n                });\n            };\n            \n            /**\n             * Finish writing the video and return a Promise to signal completion.\n             *\n             * If the destination device was memory (i.e. options.fileWriter was not supplied), the Promise is resolved with\n             * a Blob with the contents of the entire video.\n             */\n            this.complete = function() {\n                flushClusterFrameBuffer();\n                \n                writeCues();\n                rewriteSeekHead();\n                rewriteDuration();\n                \n                return blobBuffer.complete('video/webm');\n            };\n            \n            this.getWrittenSize = function() {\n                return blobBuffer.length;\n            };\n    \n            options = extend(optionDefaults, options || {});\n            validateOptions();\n        };\n    };\n\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n\t    module.exports = WebMWriter(require(\"./ArrayBufferDataStream\"), require(\"./BlobBuffer\"));\n    } else {\n\t    window.WebMWriter = WebMWriter(ArrayBufferDataStream, BlobBuffer);\n    }\n})();\n","map":{"mappings":[{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../../node_modules/webm-writer/WebMWriter.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}}],"sources":{"../../node_modules/webm-writer/WebMWriter.js":"/**\n * WebM video encoder for Google Chrome. This implementation is suitable for creating very large video files, because\n * it can stream Blobs directly to a FileWriter without buffering the entire video in memory.\n * \n * When FileWriter is not available or not desired, it can buffer the video in memory as a series of Blobs which are \n * eventually returned as one composite Blob.\n * \n * By Nicholas Sherlock.\n * \n * Based on the ideas from Whammy: https://github.com/antimatter15/whammy\n * \n * Released under the WTFPLv2 https://en.wikipedia.org/wiki/WTFPL\n */\n\n\"use strict\";\n\n(function() {\n    var WebMWriter = function(ArrayBufferDataStream, BlobBuffer) {\n        function extend(base, top) {\n            var\n                target = {};\n            \n            [base, top].forEach(function(obj) {\n                for (var prop in obj) {\n                    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n                        target[prop] = obj[prop];\n                    }\n                }\n            });\n            \n            return target;\n        }\n        \n        /**\n         * Decode a Base64 data URL into a binary string.\n         *\n         * Returns the binary string, or false if the URL could not be decoded.\n         */\n        function decodeBase64WebPDataURL(url) {\n            if (typeof url !== \"string\" || !url.match(/^data:image\\/webp;base64,/i)) {\n                return false;\n            }\n            \n            return window.atob(url.substring(\"data:image\\/webp;base64,\".length));\n        }\n        \n        /**\n         * Convert a raw binary string (one character = one output byte) to an ArrayBuffer\n         */\n        function stringToArrayBuffer(string) {\n            var\n                buffer = new ArrayBuffer(string.length),\n                int8Array = new Uint8Array(buffer);\n            \n            for (var i = 0; i < string.length; i++) {\n                int8Array[i] = string.charCodeAt(i);\n            }\n            \n            return buffer;\n        }\n        \n        /**\n         * Convert the given canvas to a WebP encoded image and return the image data as a string.\n         */\n        function renderAsWebP(canvas, quality) {\n            var\n                frame = canvas.toDataURL('image/webp', {quality: quality});\n            \n            return decodeBase64WebPDataURL(frame);\n        }\n        \n        function extractKeyframeFromWebP(webP) {\n            // Assume that Chrome will generate a Simple Lossy WebP which has this header:\n            var\n                keyframeStartIndex = webP.indexOf('VP8 ');\n            \n            if (keyframeStartIndex == -1) {\n                throw \"Failed to identify beginning of keyframe in WebP image\";\n            }\n            \n            // Skip the header and the 4 bytes that encode the length of the VP8 chunk\n            keyframeStartIndex += 'VP8 '.length + 4;\n            \n            return webP.substring(keyframeStartIndex);\n        }\n        \n        // Just a little utility so we can tag values as floats for the EBML encoder's benefit\n        function EBMLFloat32(value) {\n            this.value = value;\n        }\n        \n        function EBMLFloat64(value) {\n            this.value = value;\n        }\n        \n        /**\n         * Write the given EBML object to the provided ArrayBufferStream.\n         *\n         * The buffer's first byte is at bufferFileOffset inside the video file. This is used to complete offset and\n         * dataOffset fields in each EBML structure, indicating the file offset of the first byte of the EBML element and\n         * its data payload.\n         */\n        function writeEBML(buffer, bufferFileOffset, ebml) {\n            // Is the ebml an array of sibling elements?\n            if (Array.isArray(ebml)) {\n                for (var i = 0; i < ebml.length; i++) {\n                    writeEBML(buffer, bufferFileOffset, ebml[i]);\n                }\n            // Is this some sort of raw data that we want to write directly?\n            } else if (typeof ebml === \"string\") {\n                buffer.writeString(ebml);\n            } else if (ebml instanceof Uint8Array) {\n                buffer.writeBytes(ebml);\n            } else if (ebml.id){\n                // We're writing an EBML element\n                ebml.offset = buffer.pos + bufferFileOffset;\n                \n                buffer.writeUnsignedIntBE(ebml.id); // ID field\n                \n                // Now we need to write the size field, so we must know the payload size:\n                \n                if (Array.isArray(ebml.data)) {\n                    // Writing an array of child elements. We won't try to measure the size of the children up-front\n                    \n                    var\n                        sizePos, dataBegin, dataEnd;\n                    \n                    if (ebml.size === -1) {\n                        // Write the reserved all-one-bits marker to note that the size of this element is unknown/unbounded\n                        buffer.writeByte(0xFF);\n                    } else {\n                        sizePos = buffer.pos;\n                        \n                        /* Write a dummy size field to overwrite later. 4 bytes allows an element maximum size of 256MB,\n                         * which should be plenty (we don't want to have to buffer that much data in memory at one time\n                         * anyway!)\n                         */\n                        buffer.writeBytes([0, 0, 0, 0]);\n                    }\n                    \n                    dataBegin = buffer.pos;\n                    \n                    ebml.dataOffset = dataBegin + bufferFileOffset;\n                    writeEBML(buffer, bufferFileOffset, ebml.data);\n                    \n                    if (ebml.size !== -1) {\n                        dataEnd = buffer.pos;\n                        \n                        ebml.size = dataEnd - dataBegin;\n                        \n                        buffer.seek(sizePos);\n                        buffer.writeEBMLVarIntWidth(ebml.size, 4); // Size field\n                        \n                        buffer.seek(dataEnd);\n                    }\n                } else if (typeof ebml.data === \"string\") {\n                    buffer.writeEBMLVarInt(ebml.data.length); // Size field\n                    ebml.dataOffset = buffer.pos + bufferFileOffset;\n                    buffer.writeString(ebml.data);\n                } else if (typeof ebml.data === \"number\") {\n                    // Allow the caller to explicitly choose the size if they wish by supplying a size field\n                    if (!ebml.size) {\n                        ebml.size = buffer.measureUnsignedInt(ebml.data);\n                    }\n                    \n                    buffer.writeEBMLVarInt(ebml.size); // Size field\n                    ebml.dataOffset = buffer.pos + bufferFileOffset;\n                    buffer.writeUnsignedIntBE(ebml.data, ebml.size);\n                } else if (ebml.data instanceof EBMLFloat64) {\n                    buffer.writeEBMLVarInt(8); // Size field\n                    ebml.dataOffset = buffer.pos + bufferFileOffset;\n                    buffer.writeDoubleBE(ebml.data.value);\n                } else if (ebml.data instanceof EBMLFloat32) {\n                    buffer.writeEBMLVarInt(4); // Size field\n                    ebml.dataOffset = buffer.pos + bufferFileOffset;\n                    buffer.writeFloatBE(ebml.data.value);\n                } else if (ebml.data instanceof Uint8Array) {\n                    buffer.writeEBMLVarInt(ebml.data.byteLength); // Size field\n                    ebml.dataOffset = buffer.pos + bufferFileOffset;\n                    buffer.writeBytes(ebml.data);\n                } else {\n                    throw \"Bad EBML datatype \" + typeof ebml.data;\n                }\n            } else {\n                throw \"Bad EBML datatype \" + typeof ebml.data;\n            }\n        }\n        \n        return function(options) {\n            var\n                MAX_CLUSTER_DURATION_MSEC = 5000,\n                DEFAULT_TRACK_NUMBER = 1,\n            \n                writtenHeader = false,\n                videoWidth, videoHeight,\n                \n                clusterFrameBuffer = [],\n                clusterStartTime = 0,\n                clusterDuration = 0,\n                \n                optionDefaults = {\n                    quality: 0.95,       // WebM image quality from 0.0 (worst) to 1.0 (best)\n                    fileWriter: null,    // Chrome FileWriter in order to stream to a file instead of buffering to memory (optional)\n                    fd: null,            // Node.JS file descriptor to write to instead of buffering (optional)\n                    \n                    // You must supply one of:\n                    frameDuration: null, // Duration of frames in milliseconds\n                    frameRate: null,     // Number of frames per second\n                },\n                \n                seekPoints = {\n                    Cues: {id: new Uint8Array([0x1C, 0x53, 0xBB, 0x6B]), positionEBML: null},\n                    SegmentInfo: {id: new Uint8Array([0x15, 0x49, 0xA9, 0x66]), positionEBML: null},\n                    Tracks: {id: new Uint8Array([0x16, 0x54, 0xAE, 0x6B]), positionEBML: null},\n                },\n                \n                ebmlSegment,\n                segmentDuration = {\n                    \"id\": 0x4489, // Duration\n                    \"data\": new EBMLFloat64(0)\n                },\n                \n                seekHead,\n                \n                cues = [],\n                \n                blobBuffer = new BlobBuffer(options.fileWriter || options.fd);\n    \n            function fileOffsetToSegmentRelative(fileOffset) {\n                return fileOffset - ebmlSegment.dataOffset;\n            }\n            \n            /**\n             * Create a SeekHead element with descriptors for the points in the global seekPoints array.\n             *\n             * 5 bytes of position values are reserved for each node, which lie at the offset point.positionEBML.dataOffset,\n             * to be overwritten later.\n             */\n            function createSeekHead() {\n                var\n                    seekPositionEBMLTemplate = {\n                        \"id\": 0x53AC, // SeekPosition\n                        \"size\": 5, // Allows for 32GB video files\n                        \"data\": 0 // We'll overwrite this when the file is complete\n                    },\n                    \n                    result = {\n                        \"id\": 0x114D9B74, // SeekHead\n                        \"data\": []\n                    };\n                \n                for (var name in seekPoints) {\n                    var\n                        seekPoint = seekPoints[name];\n                \n                    seekPoint.positionEBML = Object.create(seekPositionEBMLTemplate);\n                    \n                    result.data.push({\n                         \"id\": 0x4DBB, // Seek\n                         \"data\": [\n                              {\n                                  \"id\": 0x53AB, // SeekID\n                                  \"data\": seekPoint.id\n                              },\n                              seekPoint.positionEBML\n                         ]\n                    });\n                }\n                \n                return result;\n            }\n            \n            /**\n             * Write the WebM file header to the stream.\n             */\n            function writeHeader() {\n                seekHead = createSeekHead();\n                \n                var\n                    ebmlHeader = {\n                        \"id\": 0x1a45dfa3, // EBML\n                        \"data\": [\n                            {\n                                \"id\": 0x4286, // EBMLVersion\n                                \"data\": 1\n                            },\n                            {\n                                \"id\": 0x42f7, // EBMLReadVersion\n                                \"data\": 1\n                            },\n                            {\n                                \"id\": 0x42f2, // EBMLMaxIDLength\n                                \"data\": 4\n                            },\n                            {\n                                \"id\": 0x42f3, // EBMLMaxSizeLength\n                                \"data\": 8\n                            },\n                            {\n                                \"id\": 0x4282, // DocType\n                                \"data\": \"webm\"\n                            },\n                            {\n                                \"id\": 0x4287, // DocTypeVersion\n                                \"data\": 2\n                            },\n                            {\n                                \"id\": 0x4285, // DocTypeReadVersion\n                                \"data\": 2\n                            }\n                        ]\n                    },\n                    \n                    segmentInfo = {\n                        \"id\": 0x1549a966, // Info\n                        \"data\": [\n                            {\n                                \"id\": 0x2ad7b1, // TimecodeScale\n                                \"data\": 1e6 // Times will be in miliseconds (1e6 nanoseconds per step = 1ms)\n                            },\n                            {\n                                \"id\": 0x4d80, // MuxingApp\n                                \"data\": \"webm-writer-js\",\n                            },\n                            {\n                                \"id\": 0x5741, // WritingApp\n                                \"data\": \"webm-writer-js\"\n                            },\n                            segmentDuration // To be filled in later\n                        ]\n                    },\n                    \n                    tracks = {\n                        \"id\": 0x1654ae6b, // Tracks\n                        \"data\": [\n                            {\n                                \"id\": 0xae, // TrackEntry\n                                \"data\": [\n                                    {\n                                        \"id\": 0xd7, // TrackNumber\n                                        \"data\": DEFAULT_TRACK_NUMBER\n                                    },\n                                    {\n                                        \"id\": 0x73c5, // TrackUID\n                                        \"data\": DEFAULT_TRACK_NUMBER\n                                    },\n                                    {\n                                        \"id\": 0x9c, // FlagLacing\n                                        \"data\": 0\n                                    },\n                                    {\n                                        \"id\": 0x22b59c, // Language\n                                        \"data\": \"und\"\n                                    },\n                                    {\n                                        \"id\": 0x86, // CodecID\n                                        \"data\": \"V_VP8\"\n                                    },\n                                    {\n                                        \"id\": 0x258688, // CodecName\n                                        \"data\": \"VP8\"\n                                    },\n                                    {\n                                        \"id\": 0x83, // TrackType\n                                        \"data\": 1\n                                    },\n                                    {\n                                        \"id\": 0xe0,  // Video\n                                        \"data\": [\n                                            {\n                                                \"id\": 0xb0, // PixelWidth\n                                                \"data\": videoWidth\n                                            },\n                                            {\n                                                \"id\": 0xba, // PixelHeight\n                                                \"data\": videoHeight\n                                            }\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    };\n                \n                ebmlSegment = {\n                    \"id\": 0x18538067, // Segment\n                    \"size\": -1, // Unbounded size\n                    \"data\": [\n                        seekHead,\n                        segmentInfo,\n                        tracks,\n                    ]\n                };\n                \n                var\n                    bufferStream = new ArrayBufferDataStream(256);\n                    \n                writeEBML(bufferStream, blobBuffer.pos, [ebmlHeader, ebmlSegment]);\n                blobBuffer.write(bufferStream.getAsDataArray());\n                \n                // Now we know where these top-level elements lie in the file:\n                seekPoints.SegmentInfo.positionEBML.data = fileOffsetToSegmentRelative(segmentInfo.offset);\n                seekPoints.Tracks.positionEBML.data = fileOffsetToSegmentRelative(tracks.offset);\n            };\n            \n            /**\n             * Create a SimpleBlock keyframe header using these fields:\n             *     timecode    - Time of this keyframe\n             *     trackNumber - Track number from 1 to 126 (inclusive)\n             *     frame       - Raw frame data payload string\n             *\n             * Returns an EBML element.\n             */\n            function createKeyframeBlock(keyframe) {\n                var\n                    bufferStream = new ArrayBufferDataStream(1 + 2 + 1);\n                \n                if (!(keyframe.trackNumber > 0 && keyframe.trackNumber < 127)) {\n                    throw \"TrackNumber must be > 0 and < 127\";\n                }\n    \n                bufferStream.writeEBMLVarInt(keyframe.trackNumber); // Always 1 byte since we limit the range of trackNumber\n                bufferStream.writeU16BE(keyframe.timecode);\n                \n                // Flags byte\n                bufferStream.writeByte(\n                    1 << 7 // Keyframe\n                );\n                \n                return {\n                    \"id\": 0xA3, // SimpleBlock\n                    \"data\": [\n                         bufferStream.getAsDataArray(),\n                         keyframe.frame\n                    ]\n                };\n            }\n            \n            /**\n             * Create a Cluster node using these fields:\n             *\n             *    timecode    - Start time for the cluster\n             *\n             * Returns an EBML element.\n             */\n            function createCluster(cluster) {\n                return {\n                    \"id\": 0x1f43b675,\n                    \"data\": [\n                         {\n                            \"id\": 0xe7, // Timecode\n                            \"data\": Math.round(cluster.timecode)\n                         }\n                    ]\n                };\n            }\n            \n            function addCuePoint(trackIndex, clusterTime, clusterFileOffset) {\n                cues.push({\n                    \"id\": 0xBB, // Cue\n                    \"data\": [\n                         {\n                             \"id\": 0xB3, // CueTime\n                             \"data\": clusterTime\n                         },\n                         {\n                             \"id\": 0xB7, // CueTrackPositions\n                             \"data\": [\n                                  {\n                                      \"id\": 0xF7, // CueTrack\n                                      \"data\": trackIndex\n                                  },\n                                  {\n                                      \"id\": 0xF1, // CueClusterPosition\n                                      \"data\": fileOffsetToSegmentRelative(clusterFileOffset)\n                                  }\n                             ]\n                         }\n                    ]\n                });\n            }\n            \n            /**\n             * Write a Cues element to the blobStream using the global `cues` array of CuePoints (use addCuePoint()).\n             * The seek entry for the Cues in the SeekHead is updated.\n             */\n            function writeCues() {\n                var\n                    ebml = {\n                        \"id\": 0x1C53BB6B,\n                        \"data\": cues\n                    },\n                    \n                    cuesBuffer = new ArrayBufferDataStream(16 + cues.length * 32); // Pretty crude estimate of the buffer size we'll need\n                \n                writeEBML(cuesBuffer, blobBuffer.pos, ebml);\n                blobBuffer.write(cuesBuffer.getAsDataArray());\n                \n                // Now we know where the Cues element has ended up, we can update the SeekHead\n                seekPoints.Cues.positionEBML.data = fileOffsetToSegmentRelative(ebml.offset);\n            }\n            \n            /**\n             * Flush the frames in the current clusterFrameBuffer out to the stream as a Cluster.\n             */\n            function flushClusterFrameBuffer() {\n                if (clusterFrameBuffer.length == 0) {\n                    return;\n                }\n    \n                // First work out how large of a buffer we need to hold the cluster data\n                var\n                    rawImageSize = 0;\n                \n                for (var i = 0; i < clusterFrameBuffer.length; i++) {\n                    rawImageSize += clusterFrameBuffer[i].frame.length;\n                }\n                \n                var\n                    buffer = new ArrayBufferDataStream(rawImageSize + clusterFrameBuffer.length * 32), // Estimate 32 bytes per SimpleBlock header\n    \n                    cluster = createCluster({\n                        timecode: Math.round(clusterStartTime),\n                    });\n                    \n                for (var i = 0; i < clusterFrameBuffer.length; i++) {\n                    cluster.data.push(createKeyframeBlock(clusterFrameBuffer[i]));\n                }\n                \n                writeEBML(buffer, blobBuffer.pos, cluster);\n                blobBuffer.write(buffer.getAsDataArray());\n                \n                addCuePoint(DEFAULT_TRACK_NUMBER, Math.round(clusterStartTime), cluster.offset);\n                \n                clusterFrameBuffer = [];\n                clusterStartTime += clusterDuration;\n                clusterDuration = 0;\n            }\n            \n            function validateOptions() {\n                // Derive frameDuration setting if not already supplied\n                if (!options.frameDuration) {\n                    if (options.frameRate) {\n                        options.frameDuration = 1000 / options.frameRate;\n                    } else {\n                        throw \"Missing required frameDuration or frameRate setting\";\n                    }\n                }\n            }\n            \n            function addFrameToCluster(frame) {\n                frame.trackNumber = DEFAULT_TRACK_NUMBER;\n                \n                // Frame timecodes are relative to the start of their cluster:\n                frame.timecode = Math.round(clusterDuration);\n    \n                clusterFrameBuffer.push(frame);\n                \n                clusterDuration += frame.duration;\n                \n                if (clusterDuration >= MAX_CLUSTER_DURATION_MSEC) {\n                    flushClusterFrameBuffer();\n                }\n            }\n            \n            /**\n             * Rewrites the SeekHead element that was initially written to the stream with the offsets of top level elements.\n             *\n             * Call once writing is complete (so the offset of all top level elements is known).\n             */\n            function rewriteSeekHead() {\n                var\n                    seekHeadBuffer = new ArrayBufferDataStream(seekHead.size),\n                    oldPos = blobBuffer.pos;\n                \n                // Write the rewritten SeekHead element's data payload to the stream (don't need to update the id or size)\n                writeEBML(seekHeadBuffer, seekHead.dataOffset, seekHead.data);\n                \n                // And write that through to the file\n                blobBuffer.seek(seekHead.dataOffset);\n                blobBuffer.write(seekHeadBuffer.getAsDataArray());\n    \n                blobBuffer.seek(oldPos);\n            }\n            \n            /**\n             * Rewrite the Duration field of the Segment with the newly-discovered video duration.\n             */\n            function rewriteDuration() {\n                var\n                    buffer = new ArrayBufferDataStream(8),\n                    oldPos = blobBuffer.pos;\n                \n                // Rewrite the data payload (don't need to update the id or size)\n                buffer.writeDoubleBE(clusterStartTime);\n                \n                // And write that through to the file\n                blobBuffer.seek(segmentDuration.dataOffset);\n                blobBuffer.write(buffer.getAsDataArray());\n        \n                blobBuffer.seek(oldPos);\n            }\n            \n            /**\n             * Add a frame to the video. Currently the frame must be a Canvas element.\n             */\n            this.addFrame = function(canvas) {\n                if (writtenHeader) {\n                    if (canvas.width != videoWidth || canvas.height != videoHeight) {\n                        throw \"Frame size differs from previous frames\";\n                    }\n                } else {\n                    videoWidth = canvas.width;\n                    videoHeight = canvas.height;\n    \n                    writeHeader();\n                    writtenHeader = true;\n                }\n    \n                var\n                    webP = renderAsWebP(canvas, {quality: options.quality});\n                \n                if (!webP) {\n                    throw \"Couldn't decode WebP frame, does the browser support WebP?\";\n                }\n                \n                addFrameToCluster({\n                    frame: extractKeyframeFromWebP(webP),\n                    duration: options.frameDuration\n                });\n            };\n            \n            /**\n             * Finish writing the video and return a Promise to signal completion.\n             *\n             * If the destination device was memory (i.e. options.fileWriter was not supplied), the Promise is resolved with\n             * a Blob with the contents of the entire video.\n             */\n            this.complete = function() {\n                flushClusterFrameBuffer();\n                \n                writeCues();\n                rewriteSeekHead();\n                rewriteDuration();\n                \n                return blobBuffer.complete('video/webm');\n            };\n            \n            this.getWrittenSize = function() {\n                return blobBuffer.length;\n            };\n    \n            options = extend(optionDefaults, options || {});\n            validateOptions();\n        };\n    };\n\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n\t    module.exports = WebMWriter(require(\"./ArrayBufferDataStream\"), require(\"./BlobBuffer\"));\n    } else {\n\t    window.WebMWriter = WebMWriter(ArrayBufferDataStream, BlobBuffer);\n    }\n})();\n"},"lineCount":664}},"hash":"e47957f0b1536e800a04d88f9bc0e960","cacheData":{"env":{}}}